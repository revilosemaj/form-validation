{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oliver.james.aco\\\\OneDrive - Accenture\\\\desktop\\\\Oliver\\\\form-validation\\\\form-validation\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredFirstname,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstname\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredLastname,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastname\n  } = useInput(value => value.trim() !== '');\n  let formIsValid = false;\n\n  if (firstNameIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!firstNameIsValid) {\n      return;\n    }\n\n    resetFirstname();\n  };\n\n  const firstNameInputClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredFirstname,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name must be filled.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"dvrclycJqR24548MbrQZjhm/Uq8=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/Users/oliver.james.aco/OneDrive - Accenture/desktop/Oliver/form-validation/form-validation/src/components/BasicForm.js"],"names":["useState","useInput","BasicForm","props","value","enteredFirstname","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","valueBlurHandler","firstNameBlurHandler","reset","resetFirstname","trim","enteredLastname","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastname","formIsValid","formSubmissionHandler","event","preventDefault","firstNameInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AACJC,IAAAA,KAAK,EAAEC,gBADH;AAEJC,IAAAA,OAAO,EAAEC,gBAFL;AAGJC,IAAAA,QAAQ,EAAEC,iBAHN;AAIJC,IAAAA,kBAAkB,EAAEC,sBAJhB;AAKJC,IAAAA,gBAAgB,EAAEC,oBALd;AAMJC,IAAAA,KAAK,EAAEC;AANH,MAOFd,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACY,IAAN,OAAiB,EAA3B,CAPZ;AASA,QAAM;AACJZ,IAAAA,KAAK,EAAEa,eADH;AAEJX,IAAAA,OAAO,EAAEY,eAFL;AAGJV,IAAAA,QAAQ,EAAEW,gBAHN;AAIJT,IAAAA,kBAAkB,EAAEU,qBAJhB;AAKJR,IAAAA,gBAAgB,EAAES,mBALd;AAMJP,IAAAA,KAAK,EAAEQ;AANH,MAOFrB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACY,IAAN,OAAiB,EAA3B,CAPZ;AASA,MAAIO,WAAW,GAAG,KAAlB;;AAEA,MAAIhB,gBAAJ,EAAsB;AACpBgB,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,qBAAqB,GAAGC,KAAK,IAAI;AACrCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACnB,gBAAL,EAAuB;AACrB;AACD;;AAEDQ,IAAAA,cAAc;AACf,GARD;;AAUA,QAAMY,qBAAqB,GAAGlB,iBAAiB,GAAG,sBAAH,GAA4B,cAA3E;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEe,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEG,qBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,KAAK,EAAEtB,gBAHT;AAIE,UAAA,QAAQ,EAAEM,sBAJZ;AAKE,UAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF,EASGJ,iBAAiB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAsBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACc,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAjED;;GAAMrB,S;UAQAD,Q,EASAA,Q;;;KAjBAC,S;AAmEN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\nimport useInput from '../hooks/use-input';\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstname,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstname\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value: enteredLastname,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastname\n  } = useInput(value => value.trim() !== '');\n\n  let formIsValid = false;\n\n  if (firstNameIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!firstNameIsValid) {\n      return;\n    }\n\n    resetFirstname();\n  }\n\n  const firstNameInputClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='control-group'>\n        <div className={firstNameInputClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input\n            type='text'\n            id='name'\n            value={enteredFirstname}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && <p>Name must be filled.</p>}\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' />\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' />\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}