{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oliver.james.aco\\\\OneDrive - Accenture\\\\desktop\\\\Oliver\\\\form-validation\\\\form-validation\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SimpleInput, \"N/gy9exlzawUfXJbUo+845nWhTw=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/oliver.james.aco/OneDrive - Accenture/desktop/Oliver/form-validation/form-validation/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst SimpleInput = props => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n  }\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true)\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value)\n  }\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true)\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true)\n    setEnteredEmailTouched(true)\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    setEnteredName('')\n    setEnteredNameTouched(false)\n\n    setEnteredEmail('')\n    setEnteredEmailTouched(false)\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n\n  return <form onSubmit={formSubmissionHandler}>\n    <div className={nameInputClasses}>\n      <label htmlFor=\"name\">Your Name</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        value={enteredName}\n        onChange={nameInputChangeHandler}\n        onBlur={nameInputBlurHandler}\n      />\n      {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n    </div>\n    <div className={emailInputClasses}>\n      <label htmlFor=\"email\">Your Email</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        value={enteredEmail}\n        onChange={emailInputChangeHandler}\n        onBlur={emailInputBlurHandler}\n      />\n      {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty.</p>}\n    </div>\n    <div className=\"form-actions\">\n      <button disabled={!formIsValid}>Submit</button>\n    </div>\n  </form>\n}\n\n\nexport default SimpleInput"]},"metadata":{},"sourceType":"module"}